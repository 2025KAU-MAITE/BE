name: CI/CD Pipeline

on:
  push:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make application.yml
        run: |
          cd ./src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > ./application.yml
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          arguments: clean build -x test

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: server
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: server
          path: build/libs/

      - name: Deploy to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_KEY }}
          EC2_USERNAME: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "[🔐] 키 파일 저장"
          echo "$EC2_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          echo "[📦] JAR 파일 찾기"
          jar_file=$(find build/libs -name '*.jar' ! -name '*plain.jar' | head -n 1)
          echo "[🚀] EC2로 파일 전송 시작"
          scp -i private_key.pem -o StrictHostKeyChecking=no "$jar_file" $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/app.jar
          echo "[🔧] EC2에 접속하여 앱 실행"
          ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST "
            echo '[🛑] 기존 자바 프로세스 종료'
            pgrep java | xargs -r kill -15
            sleep 10
            echo '[📄] GCP 키 파일 저장'
            echo -e \"${{ secrets.GOOGLE_CREDENTIALS }}\" > /home/$EC2_USERNAME/credentials.json
            echo '[🔗] GCP 경로 환경변수 설정'
            export GOOGLE_APPLICATION_CREDENTIALS=/home/$EC2_USERNAME/credentials.json
            echo '[▶️] Spring Boot 앱 실행'
            nohup java -jar /home/$EC2_USERNAME/app.jar > app.log 2>&1 &
          "
          echo "[🧹] 키 파일 삭제"
          rm -f private_key.pem
